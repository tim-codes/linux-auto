- hosts: all
  become: 'yes' # execute as sudo
  vars:
    packages:
      - curl
      - glances
      - debian-keyring
      - debian-archive-keyring
      - apt-transport-https
      - tldr
      - samba
      - transmission-cli
      - transmission-common
      - transmission-daemon
  tasks:
    - name: Setup remote state dir
      command:
        cmd: mkdir -p /var/ansible/state
        creates: /var/ansible/state

    - name: Install Docker
      snap:
        name: docker
        state: present

    - name: Install Microk8s
      snap:
        name: docker
        state: present
        classic: yes

    - name: Create Docker and Microk8s groups.
      group:
        name: '{{ item }}'
        state: present
      with_items:
        - docker
        - microk8s

    - name: Add user to Docker and Microk8s groups.
      user:
        name: '{{ lookup("ENV", "USER") }}'
        state: present
        groups:
          - docker
          - microk8s
        append: true

    - name: Enable Microk8s addons
      command: microk8s enable dashboard metrics-server

    - name: Start Microk8s
      command: microk8s start

    - name: Apt update & upgrade
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install apt packages
      apt:
        name: '{{ packages }}'
        state: present # install if missing else skip it

    - name: Setup Firewall
      command: |
        ufw default deny incoming
        ufw default allow outgoing
        ufw allow ssh
        ufw allow http
        ufw allow https
        ufw allow samba
        ufw allow 32400
        ufw allow 9091
        ufw allow 51413
        ufw enable
#       async: 10

    - name: Install Plex
      shell:
        cmd: |
          echo deb [signed-by=/usr/share/keyrings/plex.gpg] https://downloads.plex.tv/repo/deb public main | tee /etc/apt/sources.list.d/plexmediaserver.list
          wget -O- https://downloads.plex.tv/plex-keys/PlexSign.key | gpg --dearmor | tee /usr/share/keyrings/plex.gpg
          apt update && apt install -y plexmediaserver
          systemctl enable plexmediaserver
          touch /var/ansible/state/plex
          mkdir -p /etc/systemd/system/plexmediaserver.service.d
        creates: /var/ansible/state/plex

    - name: Configure Plex
      copy:
        src: ../server/plex.conf
        dest: /etc/systemd/system/plexmediaserver.service.d/override.conf

    - name: Restart Plex
      command: systemctl daemon-reload

    - name: Install caddy
      command:
        cmd: |
          curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
          curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list
          apt update && apt install -y caddy
          touch /var/ansible/state/caddy
        creates: /var/ansible/state/caddy
#       async: 15 # timeout after 15 seconds
#       register: debug_install_caddy

#     - name: Debug stdout [install_caddy]
#       debug:
#         msg: '{{ debug_install_caddy.stdout }}'

#     - name: Debug stderr [install_caddy]
#       debug:
#         msg: '{{ debug_install_caddy.stderr }}'

    - name: Add Caddyfile
      copy:
        src: ../server/Caddyfile
        dest: /etc/caddy/Caddyfile

    - name: Reload Caddy service
      shell: |
        systemctl start caddy
        systemctl reload caddy

    - name: Backup samba config
      command:
        cmd: cp /etc/samba/smb.conf /etc/samba/smb.conf_backup
        creates: /etc/samba/smb.conf_backup

    - name: Add custom samba config
      copy:
        src: ../server/smb.conf
        dest: /etc/samba/smb.conf
        force: yes

    - name: Add [tim] samba config
      copy:
        src: ../server/tim.smb.conf
        dest: /etc/samba/tim.smb.conf
        force: yes

    - name: Enable samba daemon
      command: systemctl enable --now smbd

    - name: Reload samba daemon (for config changes)
      command: service smbd restart

    - name: Stop Transmission
      command: service transmission-daemon stop

    - name: Configure Transmission
      copy:
        src: ../server/transmission.json
        dest: /var/lib/transmission-daemon/info/settings.json
        force: yes

    - name: Increase memory buffer for Transmission
      shell:
        cmd: |
          echo "net.core.rmem_max = 4194304" >> /etc/sysctl.conf
          echo "net.core.wmem_max = 1048576" >> /etc/sysctl.conf
          sysctl -p
          sysctl --system
        creates: /var/ansible/state/sysctl_mem

    - name: Start Transmission
      command: service transmission-daemon start
